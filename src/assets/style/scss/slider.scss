// Code based on https://css-tricks.com/multi-thumb-sliders-particular-two-thumb-case/

$w: 20em;
$h: 4em;
$d: 0.5*$h;
$r: 0.5*$d;
$uw: $w - $d;
@mixin track() {
  width: 100%;
  height: 100%;
  /* get rid of Firefox track background */
  background: none;
}
@mixin thumb() {
  border: none;
  /* get rid of Firefox thumb border */
  width: $d;
  height: $h;
  border-radius: 0;
  /* get rid of Firefox corner rounding */
  background: linear-gradient(90deg, #fff 2px, transparent 0) calc(#{$r} - 1px), radial-gradient(circle, var(--col) calc(#{$r} - 1px), transparent $r);
  pointer-events: auto;
}
/* fix too small font-size in both Chrome & Firefox */
* {
  font: inherit;
}

.wrap {
  --dif: calc(var(--max) - var(--min));
  display: grid;
  grid-template: repeat(2, max-content) #{$h}/ 1fr 1fr;
  overflow: hidden;
  position: relative;
  margin: 1em auto;
  width: $w;
  background: linear-gradient(0deg, #ccc $h, transparent 0);
  font-family: ubuntu mono, consolas, monaco, monospace;

  &::after,
  &::before {
    grid-column: 1/ span 2;
    grid-row: 3;
    background: #95a;
    content: '';
  }

  &::before {
    margin-left: calc(#{$r} + (var(--a) - var(--min))/var(--dif)*#{$uw});
    width: calc((var(--b) - var(--a))/var(--dif)*#{$uw});
  }

  &::after {
    margin-left: calc(#{$r} + (var(--b) - var(--min))/var(--dif)*#{$uw});
    width: calc((var(--a) - var(--b))/var(--dif)*#{$uw});
  }
}

[id='multi-lbl'] {
  grid-column: 1/ span 2;
}

.sr-only {
  position: absolute;
  clip-path: inset(50%);
}

input[type='range'] {
  &,
  &::-webkit-slider-runnable-track,
  &::-webkit-slider-thumb {
    -webkit-appearance: none;
  }
  grid-column: 1/ span 2;
  grid-row: 3;
  z-index: 1;
  top: 0;
  left: 0;
  margin: 0;
  background: none;
  /* get rid of white Chrome background */
  --col: #000;
  pointer-events: none;

  &::-webkit-slider-runnable-track {
    @include track
  }

  &::-moz-range-track {
    @include track
  }

  &::-webkit-slider-thumb {
    @include thumb
  }

  &::-moz-range-thumb {
    @include thumb
  }

  &:focus {
    z-index: 2;
    outline: dotted 1px currentcolor;

    &,
    & + output {
      --col: darkorange;
    }
  }
}

output {
  grid-row: 2;
  color: var(--col);

  &:last-child {
    text-align: right;
  }

  &::after {
    counter-reset: c var(--c);
    content: '--' attr(for) ': ' counter(c) ';';
  }
}
